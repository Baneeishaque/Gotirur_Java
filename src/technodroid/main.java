/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package technodroid;

import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.CMYKColor;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        initComponents();

        try {
            com.mysql.jdbc.Connection C = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/apps?", "root", "");
            java.sql.Statement S = C.createStatement();
            ResultSet r = S.executeQuery("select * from `insert`");
            DefaultTableModel t = (DefaultTableModel) jTable1.getModel();
            while (r.next()) {
                Vector v = new Vector();
                v.add(r.getString(1));

                v.add(r.getString(2));
                v.add(r.getString(4));
                v.add(r.getString(5));
                v.add(r.getString(8));
                v.add(r.getString(7));
                v.add(r.getString(10));
                v.add(r.getString(6));
                v.add(r.getString(11));

                t.addRow(v);

            }

        } catch (SQLException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        searchbox = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        category = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem4.setText("jMenuItem4");

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Technodroid");
        setPreferredSize(new java.awt.Dimension(1000, 700));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchboxActionPerformed(evt);
            }
        });
        searchbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchboxKeyPressed(evt);
            }
        });
        getContentPane().add(searchbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(689, 10, 270, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Show Items");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 120, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SI No", "Date", "Product Name", "Description", "image", "Stock", "Tax", "Price", "Category"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 940, 380));

        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 590, 80, 30));

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 580, -1, 30));

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 580, 70, 30));

        category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category", "Product", "Date", "Stock", "Price", "Category", " ", " " }));
        category.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                categoryItemStateChanged(evt);
            }
        });
        category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryActionPerformed(evt);
            }
        });
        getContentPane().add(category, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 180, 30));

        jButton4.setText("Refresh");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, -1, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/technodroid/wall.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 680));

        jMenu1.setText("File");

        jMenuItem2.setText("Add Product");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem12.setText("Add New Staff");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem12);

        jMenuItem3.setText("New Bill");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem5.setText("Old Bill");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem13.setText("Staff Details");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem13);

        jMenuItem14.setText("Expence Details");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem14);

        jMenuItem15.setText("Balence Sheet");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem15);

        jMenuItem9.setText("Expence");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);

        jMenuItem10.setText("Export");
        jMenu1.add(jMenuItem10);

        jMenuItem11.setText("Import");
        jMenu1.add(jMenuItem11);

        jMenuItem6.setText("about");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Window");

        jMenuItem7.setText("Calculater");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setText("Note");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Backup");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu4ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        ProcessBuilder b = new ProcessBuilder("calc.exe");
        try {
            Process p = b.start();// TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        ProcessBuilder b = new ProcessBuilder("notepad.exe");
        try {
            Process p = b.start();// TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }  // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jTable1.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(rootPane, "please select item");
        } else {

            insert i = new insert(
                    jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString(),
                    jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString(),
                    jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString(),
                    jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString(),
                    jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString(),
                    jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString(),
                    jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString(),
                    jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString(),
                    jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString()
            );

            i.setVisible(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed


    private void searchboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchboxKeyPressed
        if (evt.getKeyCode() == 10) {
            String sql = null;
            if (category.getSelectedItem().equals("Product")) {
                sql = "select * from `insert` where productname like '" + searchbox.getText() + "%'";

            }
            if (category.getSelectedItem().equals("Stock")) {
                sql = "select * from `insert` where stock like '" + searchbox.getText() + "%'";

            }
            if (category.getSelectedItem().equals("Price")) {
                sql = "select * from `insert` where price like '" + searchbox.getText() + "%'";

            }
            if (category.getSelectedItem().equals("Date")) {
                sql = "select * from `insert` where date like '" + searchbox.getText() + "%'";

            }
            if (category.getSelectedItem().equals("Category")) {
                sql = "select * from `insert` where gstcategory like '" + searchbox.getText() + "%'";

            }
            try {
                com.mysql.jdbc.Connection C = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/apps?", "root", "");
                java.sql.Statement S = C.createStatement();
                ResultSet r = S.executeQuery(sql);
                DefaultTableModel t = (DefaultTableModel) jTable1.getModel();
                while (jTable1.getRowCount() != 0) {
                    t.removeRow(0);
                }
                while (r.next()) {
                    Vector v = new Vector();
                    v.add(r.getString(1));

                    v.add(r.getString(2));
                    v.add(r.getString(4));
                    v.add(r.getString(5));
                    v.add(r.getString(8));
                    v.add(r.getString(7));
                    v.add(r.getString(10));
                    v.add(r.getString(6));
                    v.add(r.getString(11));

                    t.addRow(v);

                }

            } catch (SQLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

// TODO add your handling code here:
    }//GEN-LAST:event_searchboxKeyPressed

    private void categoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_categoryItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryItemStateChanged

    private void categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryActionPerformed
        /*showitem.addItem("Processor");
        showitem.addItem("Motherboard");
        showitem.addItem("Ram");
        showitem.addItem("Hard Disk");
        showitem.addItem("SMPS");
showitem.addItem("Cabinet");
showitem.addItem("UPS");
showitem.addItem("VGA card?grafics");
showitem.addItem("CD drive");
showitem.addItem("CPU fan");
showitem.addItem("etc..");
company.addItem("intel");
company.addItem("gigabyte");
company.addItem("etc..");*/
// TODO add your handling code here:
    }//GEN-LAST:event_categoryActionPerformed

    private void jMenu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu4ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        expence e = new expence();
        e.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        insert i = new insert();
        i.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        bill b = new bill();
        b.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        oldbill o = new oldbill();
        o.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        staff s = new staff();
        s.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        staffdetails s = new staffdetails();
        s.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        expencedetails e = new expencedetails();
        e.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        balencesheet b = new balencesheet();
        b.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void searchboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchboxActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            com.mysql.jdbc.Connection C = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/apps?", "root", "");
            java.sql.Statement S = C.createStatement();

            S.executeUpdate("DELETE FROM `insert` WHERE id=" + jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            JOptionPane.showMessageDialog(rootPane, " delete sucssessfully");
        } catch (SQLException ex) {
            Logger.getLogger(insert.class.getName()).log(Level.SEVERE, null, ex);

        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        main m = new main();
        m.setVisible(true);
        this.dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        login l = new login();
        l.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        backup();
    }//GEN-LAST:event_jMenu4MouseClicked

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
    about a = new about();
    a.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> category;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField searchbox;
    // End of variables declaration//GEN-END:variables

    boolean backup() {

        File docsFolder = new File("C:\\Users\\Public\\Documents");
        boolean isPresent = true;
        if (!docsFolder.exists()) {
            isPresent = docsFolder.mkdir();
        }
        if (isPresent) {
            File pdfFolder = new File("C:\\Users\\Public\\Documents", "Backups");
            if (!pdfFolder.exists()) {
                pdfFolder.mkdir();
            }

            //Create time stamp
            Date date = new Date();
            String timeStamp = new SimpleDateFormat("yyyy-MM-dd_HHmmss").format(date);

            File myFile = new File(pdfFolder + "/" + timeStamp + ".pdf");

            try {
                OutputStream output = new FileOutputStream(myFile);

                //Step 1
//                Document document = new Document();
                Document document = new Document(PageSize.A4, 50, 50, 50, 50);

                //Step 2
                PdfWriter.getInstance(document, output);
                //Step 3
                document.open();

                //Step 4 Add content
//                Anchor anchorTarget = new Anchor("First page of the document.");
//                anchorTarget.setName("BackToTop");
//                Paragraph paragraph1 = new Paragraph();
//
//                paragraph1.setSpacingBefore(50);
//
//                paragraph1.add(anchorTarget);
//                document.add(paragraph1);
//
//                document.add(new Paragraph("Some more text on the first page with different color and font type.", FontFactory.getFont(FontFactory.COURIER, 14, Font.BOLD, new CMYKColor(0, 255, 0, 0))));
                Paragraph title1 = new Paragraph("Assosciated Computer Security Systems", FontFactory.getFont(FontFactory.HELVETICA, 18, Font.BOLD, new CMYKColor(0, 255, 255, 17)));

                Chapter chapter1 = new Chapter(title1, 1);

                chapter1.setNumberDepth(0);

                Paragraph title11 = new Paragraph("Stock Details", FontFactory.getFont(FontFactory.HELVETICA, 16, Font.BOLD, new CMYKColor(0, 255, 255, 17)));

                Section section1 = chapter1.addSection(title11);

//                Paragraph someSectionText = new Paragraph("Bill Number : ");
//
//                section1.add(someSectionText);
//
//                someSectionText = new Paragraph("Customer Name : ");
//
//                section1.add(someSectionText);
//
//                someSectionText = new Paragraph("Customer Nu : ");
//
//                section1.add(someSectionText);
//
//                someSectionText = new Paragraph("G : ");
//                section1.add(someSectionText);
                PdfPTable t = new PdfPTable(9);

                t.setSpacingBefore(25);

                t.setSpacingAfter(25);

                PdfPCell c1 = new PdfPCell(new Phrase("SI Nu"));

                t.addCell(c1);

                PdfPCell c2 = new PdfPCell(new Phrase("Date"));

                t.addCell(c2);

                PdfPCell c3 = new PdfPCell(new Phrase("Product Name"));

                t.addCell(c3);

                PdfPCell c4 = new PdfPCell(new Phrase("Description"));

                t.addCell(c4);

                PdfPCell c5 = new PdfPCell(new Phrase("Image"));

                t.addCell(c5);

                PdfPCell c6 = new PdfPCell(new Phrase("Stock"));

                t.addCell(c6);

                PdfPCell c7 = new PdfPCell(new Phrase("Tax"));

                t.addCell(c7);
                PdfPCell c8 = new PdfPCell(new Phrase("Price"));

                t.addCell(c8);
                PdfPCell c9 = new PdfPCell(new Phrase("Category"));

                t.addCell(c9);

//                t.addCell("1.1");
//
//                t.addCell("1.2");
//
//                t.addCell("1.3");
//                for (int i = 0; i < jTable1.getRowCount(); i++) {
//                    t.addCell(jTable1.getValueAt(i, 0).toString());
//                    t.addCell(jTable1.getValueAt(i, 1).toString());
//                    t.addCell(jTable1.getValueAt(i, 2).toString());
//                    t.addCell(jTable1.getValueAt(i, 3).toString());
//                    t.addCell(jTable1.getValueAt(i, 4).toString());
//                    t.addCell(jTable1.getValueAt(i, 5).toString());
//                    t.addCell(jTable1.getValueAt(i, 6).toString());
////t.addCell(jTable1.getValueAt(i, 0).toString());
//                }
                try {
                    com.mysql.jdbc.Connection C = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/apps?", "root", "");
                    java.sql.Statement S = C.createStatement();
                    ResultSet r = S.executeQuery("select * from `insert`");
                    while (r.next()) {
                        t.addCell(r.getString("id"));
                        t.addCell(r.getString("date"));
                        t.addCell(r.getString("productname"));
                        t.addCell(r.getString("description"));
                        t.addCell(r.getString("image"));
                        t.addCell(r.getString("stock"));
                        t.addCell(r.getString("gstvalue"));
                        t.addCell(r.getString("price"));
                        t.addCell(r.getString("gstcategory"));

                    }

                    // TODO add your handling code here:
                } catch (SQLException ex) {
                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                }

//                t.addCell("");
//                t.addCell("");
//                t.addCell("");
//                t.addCell("");
//                t.addCell("");
//                t.addCell("Total : ");
//                t.addCell(gtotel.getText());
                section1.add(t);

                Paragraph title12 = new Paragraph("Old Bill", FontFactory.getFont(FontFactory.HELVETICA, 16, Font.BOLD, new CMYKColor(0, 255, 255, 17)));
                Chapter chapter2 = new Chapter(title12, 1);
                Section section2 = chapter2.addSection("");

                PdfPTable t2 = new PdfPTable(9);

                t2.setSpacingBefore(25);

                t2.setSpacingAfter(25);

                PdfPCell c11 = new PdfPCell(new Phrase("Bill Nu"));

                t2.addCell(c11);

                PdfPCell c21 = new PdfPCell(new Phrase("Bill TYpe"));

                t2.addCell(c21);

                PdfPCell c31 = new PdfPCell(new Phrase("Date"));

                t2.addCell(c31);

                PdfPCell c41 = new PdfPCell(new Phrase("Custemer Name"));

                t2.addCell(c41);

                PdfPCell c51 = new PdfPCell(new Phrase("Contact Number"));

                t2.addCell(c51);

                PdfPCell c61 = new PdfPCell(new Phrase("Gst Nu"));

                t2.addCell(c61);

                PdfPCell c71 = new PdfPCell(new Phrase("Service"));

                t2.addCell(c71);
                PdfPCell c81 = new PdfPCell(new Phrase("Product Details"));

                t2.addCell(c81);
                PdfPCell c91 = new PdfPCell(new Phrase("Amount"));

                t2.addCell(c91);

                try {
                    com.mysql.jdbc.Connection C = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/apps?", "root", "");
                    java.sql.Statement S = C.createStatement();
                    ResultSet r = S.executeQuery("select * from `bill`");
                    while (r.next()) {
                        t2.addCell(r.getString("billno"));
                        t2.addCell(r.getString("billtype"));
                        t2.addCell(r.getString("date"));
                        t2.addCell(r.getString("custemername"));
                        t2.addCell(r.getString("contactno"));
                        t2.addCell(r.getString("gstno"));
                        t2.addCell(r.getString("service"));
                        t2.addCell(r.getString("productname"));
                        t2.addCell(r.getString("price"));

                    }

                    // TODO add your handling code here:
                } catch (SQLException ex) {
                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                }

                section2.add(t2);

                
                  Paragraph title13 = new Paragraph("Expence Details", FontFactory.getFont(FontFactory.HELVETICA, 16, Font.BOLD, new CMYKColor(0, 255, 255, 17)));
                Chapter chapter3 = new Chapter(title13, 1);
                Section section3 = chapter3.addSection("");

                PdfPTable t3 = new PdfPTable(5);

                t3.setSpacingBefore(25);

                t3.setSpacingAfter(25);

                PdfPCell c12 = new PdfPCell(new Phrase("SI Nu"));

                t3.addCell(c12);

                PdfPCell c22 = new PdfPCell(new Phrase("Date"));

                t3.addCell(c22);

                PdfPCell c32 = new PdfPCell(new Phrase("Person"));

                t3.addCell(c32);

                PdfPCell c42 = new PdfPCell(new Phrase("Details"));

                t3.addCell(c42);

                PdfPCell c52 = new PdfPCell(new Phrase("Amount"));

                t3.addCell(c52);
                

                try {
                    com.mysql.jdbc.Connection C = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/apps?", "root", "");
                    java.sql.Statement S = C.createStatement();
                    ResultSet r = S.executeQuery("select * from `expence`");
                    while (r.next()) {
                        t3.addCell(r.getString("id"));
                        t3.addCell(r.getString("date"));
                        t3.addCell(r.getString("person"));
                        t3.addCell(r.getString("details"));
                        t3.addCell(r.getString("amount"));
                        

                    }

                    // TODO add your handling code here:
                } catch (SQLException ex) {
                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                }

                section3.add(t3);
//                com.itextpdf.text.List l = new com.itextpdf.text.List(true, false, 10);
//
//                l.add(new ListItem("First item of list"));
//
//                l.add(new ListItem("Second item of list"));
//
//                section1.add(l);
//                Image image2 = null;
//                try {
//                    image2 = Image.getInstance("IBMLogo.bmp");
//                } catch (IOException e) {
//                    e.printStackTrace();
//                }
//
//                image2.scaleAbsolute(120f, 120f);
//
//                section1.add(image2);
//                Paragraph title2 = new Paragraph("Using Anchor",
//                        FontFactory.getFont(FontFactory.HELVETICA, 16, Font.BOLD,
//                                new CMYKColor(0, 255, 0, 0)));
//
//                section1.add(title2);
//
//                title2.setSpacingBefore(5000);
//
//                Anchor anchor2 = new Anchor("Back To Top");
//
//                anchor2.setReference("#BackToTop");
//
//                section1.add(anchor2);
//
                document.add(chapter1);
                document.add(chapter2);
                document.add(chapter3);
//
//                document.add(new Paragraph("mSubjectEditText.getText().toString()"));
//                document.add(new Paragraph("mBodyEditText.getText().toString()"));

                //Step 5: Close the document
                document.close();

                if (Desktop.isDesktopSupported()) {
                    try {

                        Desktop.getDesktop().open(myFile);
                    } catch (IOException ex) {
                        // no application registered for PDFs
                    }
                }
                // TODO code application logic here

                return true;

            } catch (DocumentException | FileNotFoundException e) {
                e.printStackTrace();
//                Log.i(General_Data.TAG, "Pdf Creation failure " + e.getLocalizedMessage());
//                Toast_Utils.longToast(application_context, "Pdf fail");
            }
        } else {
//            Log.i(General_Data.TAG, "Folder Creation failure ");
//            Toast_Utils.longToast(application_context, "Folder fail");
        }
        return false;
    }
}
